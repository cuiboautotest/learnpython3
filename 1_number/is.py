"""
Python中一切都是对象，对象比较可以用 == 或者 is。
== 比较的是两个对象的内容是否相等，默认会调用对象的 __eq__() 方法。
is 比较的是两个对象的 id 是否相等，也就是是否是同一个对象，是否指向同一个内存地址。
"""
def foo():
    a = 256
    b = 256
    print(a == b)
    print(a is b)

a =258
def foo1():
    b = 258
    c = 258
    print(b == c)
    print(a is b)

foo()
foo1()

#Python 整个生命周期中，任何需要引用这些整数对象的地方，
# 都不再重新创建新的整数对象，范围是 [-5,256]
'''
上面的程序中有两部分代码块，
一个是名称 a 所在的代码块，一个是名称 b/c 所在的代码块。
Python 的另一个优化的地方就是，如果在同一个代码块中创建的两个整数对象中，它们的值相等的话那么这两个对象引用同一个整数对象。
所以Python出于对性能的考虑，但凡是不可变的对象，在同一代码块中，只有值相等的对象就不会重复创建，而是直接引用已经存在的对象。不仅整数对象，字符串对象也遵循同样的原则。
'''